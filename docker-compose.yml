version: '3.8'

services:
  discovery:
    build: ./discovery
    container_name: discovery
    ports:
      - "8761:8761"
    networks:
      - msa-net
    healthcheck:
      test: curl --fail http://localhost:8761/eureka || exit 1
      interval: 10s
      timeout: 5s
      retries: 10

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - discovery
    networks:
      - msa-net
    env_file:
      - ./api-gateway/.env

  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      - api-gateway
      - mongodb
      - kafka
    networks:
      - msa-net
    env_file:
      - ./user-service/.env

  board-service:
    build: ./board-service
    container_name: board-service
    ports:
      - "8082:8082"
    depends_on:
      - api-gateway
      - mongodb
      - user-service
    networks:
      - msa-net
    env_file:
      - ./board-service/.env

  welfare-service:
    build: ./welfare-service
    container_name: welfare-service
    ports:
      - "8083:8083"
    depends_on:
      - api-gateway
      - mongodb
    networks:
      - msa-net
    env_file:
      - ./welfare-service/.env

  ai-engine-service:
    build: ./ai-engine-service
    container_name: ai-engine-service
    ports:
      - "8084:8084"
    depends_on:
      - api-gateway
    networks:
      - msa-net
    env_file:
      - ./ai-engine-service/.env

  monitoring:
    build: ./monitoring
    container_name: monitoring
    ports:
      - "8085:8085"
    depends_on:
      - api-gateway
    networks:
      - msa-net
    env_file:
      - ./monitoring/.env

  data-collector:
    build: ./data-collector
    container_name: data-collector
    ports:
      - "8086:8086"
    depends_on:
      - api-gateway
      - mongodb
      - mysql
    networks:
      - msa-net
    env_file:
      - ./data-collector/.env

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - msa-net

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - msa-net

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - msa-net

  zipkin:
    image: openzipkin/zipkin:2.23
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - msa-net

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - msa-net

networks:
  msa-net:

volumes:
  mysql-data: